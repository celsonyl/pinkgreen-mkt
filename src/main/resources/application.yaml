server:
  port: 8181

spring:
  flyway:
    locations: classpath:/db/migrations
    url: ${POSTGRES_URL}
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
  cloud:
    function.definition: publishOrderStatusEvent;processOrderPaymentConsumer;paymentConfirmedConsumer
    stream:
      rabbit.bindings:
        publishOrderStatusEvent-out-0:
          producer.exchangeType: headers
        processOrderPaymentConsumer-in-0:
          consumer:
            exchangeType: headers
            queueBindingArguments:
              ORDER_STATUS: ORDER_CREATED
        paymentConfirmedConsumer-in-0:
          consumer:
            exchangeType: headers
            queueBindingArguments:
              STATUS: PAYMENT_CONFIRMED
      bindings:
        publishOrderStatusEvent-out-0:
          destination: order
          binder: rabbit
          contentType: application/json
        processOrderPaymentConsumer-in-0:
          destination: order
          binder: rabbit
          contentType: application/json
          group: created.pinkgreen
        paymentConfirmedConsumer-in-0:
          destination: payment
          binder: rabbit
          contentType: application/json
          group: confirmed.pinkgreen

keycloak:
  realm: ${KEYCLOAK_REALM}
  auth-server-url: ${KEYCLOAK_URL}
  resource: ${KEYCLOAK_CLIENT}
  credentials.secret: ${KEYCLOAK_SECRET}
  ssl-required: external
  use-resource-role-mappings: true
  bearer-only: true